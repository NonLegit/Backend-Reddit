{
  "openapi": "3.0.0",
  "info": {
    "title": "Reddit Restful API",
    "description": "API Documentaion.",
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1",
      "description": "Development server"
    },
    {
      "url": "https://localhost:8000/api/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/users/login": {
      "description": "User Resource",
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Get authenticated to access our api services later.",
        "summary": "User Login",
        "requestBody": {
          "description": "get authenticated using userName & password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string",
                    "example": "uniqueuser"
                  },
                  "password": {
                    "type": "string",
                    "example": "Aa1234**"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "jwt=abcde12345; expires = time ; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Incorrect password"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "User Not Found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "description": "User Resource",
      "post": {
        "tags": [
          "Users"
        ],
        "description": "update token stored in user",
        "summary": "Log Out",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "jwt=abcde12345; expires = time ;Path=/; HttpOnly"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users/signup": {
      "description": "User Resource",
      "post": {
        "tags": [
          "Users"
        ],
        "description": "signup as user in reddit",
        "summary": "User SignUP",
        "requestBody": {
          "description": "new user registrated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string",
                    "example": "uniqueuser"
                  },
                  "email": {
                    "type": "string",
                    "example": "user@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Aa1234**"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success operation",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "jwt=abcde12345; expires = time ; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (0 -> not provide body, 1 -> weak password, 2 -> user already exists)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/forgot_username": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Forgot userName",
        "requestBody": {
          "description": "user's email",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "User Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Email Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Email service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/forgot_password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Forgot Password",
        "requestBody": {
          "description": "user's email and username",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "userName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "User Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Email Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Email service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/reset_password/{token}": {
      "description": "User Resource",
      "post": {
        "tags": [
          "Users"
        ],
        "description": "change forgotten password",
        "summary": "Password reset",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "reset token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "new Password and confirmPassword",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "Aa1234**"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "Aa1234**"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "jwt=abcde12345; expires = time ; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (0 -> not provide body, 1 -> provide equal, 2 -> weak password , 3 ->Token is invalid or has expired )",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2,
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/check_reset_token/{token}": {
      "description": "User Resource",
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Check Token Valid",
        "summary": "Check Token Valid",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "reset token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Token is invalid or has expired )",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Token is invalid or has expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/google/": {
      "description": "User Resource",
      "post": {
        "tags": [
          "Users"
        ],
        "description": "google authentication",
        "summary": "google authentication",
        "requestBody": {
          "description": "google token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tokenId": {
                    "type": "string",
                    "example": "jsonwebtoken"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "jwt=abcde12345; expires = time ; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success operation",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "jwt=abcde12345; expires = time ; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is invalid or has expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/facebook/": {
      "description": "User Resource",
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Facebook authentication",
        "summary": "Facebook authentication",
        "security": [
          {
            "oAuthSample": [
              "access_token"
            ]
          }
        ],
        "requestBody": {
          "description": "facebook token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accessToken": {
                    "type": "string",
                    "example": "facebook token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "jwt=abcde12345; expires = time ; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success operation",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "jwt=abcde12345; expires = time ; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is invalid or has expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/change_email": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change user email",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "user's new email",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newEmail": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users/me/": {
      "description": "User Resource",
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get me",
        "summary": "Get all information of me",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users/me/prefs": {
      "description": "User Resource",
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get user preferences",
        "summary": "Get preferences",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "prefs": {
                      "$ref": "#/components/schemas/userPreferences"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Update user preferences such as: ",
        "summary": "Update preferences",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "update one or more of user preferences down",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userPreferences"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "prefs": {
                      "$ref": "#/components/schemas/userPreferences"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "not modified"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users/me/friends/{userName}": {
      "description": "User Resource",
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get all informations about friend",
        "summary": "Get friend informations",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "description": "friend fullname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "User": {
                      "$ref": "#/components/schemas/userPreferences"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "user not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "become friends with userName",
        "summary": "add friend",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "description": "friend fullname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "User": {
                      "$ref": "#/components/schemas/userPreferences"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "user not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "delete friend, end relationship between them",
        "summary": "Delete friend",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "description": "friend fullname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "user is not a friend of you"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "user not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userName}/block_user": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Block a certain user",
        "description": "Block a certain user so they won’t be able to directly message or send each other chat requests,reply, vote on, or award each other’s posts or comments in communities and they won’t be able to directly message or send each other chat requests.",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "user of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "already blocked",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "try blocking yourself",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "User Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed , other user has blocked you",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userName}/unblock_user": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "unblock a certain user",
        "description": "unblock a certain user so they will be able to directly message or send each other chat requests,reply, vote on, or award each other’s posts or comments in communities and they will be able to directly message or send each other chat requests.",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "already unblocked",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "try unblocking yourself",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "User Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed , other user has blocked you",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userName}/follow": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Follow a certain user",
        "description": "start seeing post & cooments and get notification from this user",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "already followed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "try following yourself",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "User Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed , other user has blocked you",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userName}/unfollow": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "unfollow a certain user",
        "description": "stop seeing post & cooments or get notification from this user",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "already unfollowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "try unfollowing yourself",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "User Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed , other user has blocked you",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/followers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "get my followers",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "followers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "ahmed"
                          },
                          "userName": {
                            "type": "string",
                            "example": "ahmed"
                          },
                          "profilePicture": {
                            "type": "string",
                            "example": "users/ahmed/ahmed.png"
                          },
                          "isFollowed": {
                            "type": "boolean",
                            "example": "truw"
                          },
                          "postKarma": {
                            "type": "integer",
                            "example": 5
                          },
                          "commentKarma": {
                            "type": "integer",
                            "example": 5
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/blocked": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "get my blocked users",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "blocked": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "ahmed"
                          },
                          "userName": {
                            "type": "string",
                            "example": "ahmed"
                          },
                          "profilePicture": {
                            "type": "string",
                            "example": "users/ahmed/ahmed.png"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/best": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Best Posts",
        "description": "Return a listing of posts according to user preferences",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HomePost"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/hot": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Hot Posts",
        "description": "Return a listing of hot posts",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HomePost"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/new": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "New Posts",
        "description": "Return a listing of new posts",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HomePost"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/top": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Top Posts",
        "description": "Return a listing of top posts",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "time",
            "required": true,
            "schema": {
              "type": "string",
              "default": "today",
              "enum": [
                "now",
                "today",
                "week",
                "month",
                "year",
                "all"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HomePost"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userName}/about": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all information about user",
        "description": "all user information ",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "user": {
                      "$ref": "#/components/schemas/Friend"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userName}/overview": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user recent activity",
        "description": "Get user activity sorted by date",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/overview"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userName}/posts": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user posts",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "New",
                "Top",
                "Hot"
              ]
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upvotes"
                }
              }
            }
          },
          "400": {
            "description": "Invalid userName supplied"
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userName}/comments": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user comments",
        "description": "get comments made by user",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commentsandoosts"
                }
              }
            }
          },
          "400": {
            "description": "Invalid userName supplied"
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/upvoted": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get upvoted posts",
        "description": "",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upvotes"
                }
              }
            }
          },
          "400": {
            "description": "Invalid userName supplied"
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/downvoted": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user downvoted posts",
        "description": "",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/downvotes"
                }
              }
            }
          },
          "400": {
            "description": "Invalid userName supplied"
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/saved": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return a listing of saved posts",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saved"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/hidden": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return a listing of hidden posts",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upvotes"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/username_available": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Check UserName available",
        "description": "Check whether a userName is available for registration",
        "parameters": [
          {
            "in": "query",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "userName query paramater is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/social_links": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all Social Media Links",
        "description": "Get all Social Media Links",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "socialLinks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Social"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "add Social Media Link to user",
        "description": "add Social Media Link to user",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "add social links",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userLink": {
                    "type": "string"
                  },
                  "displayText": {
                    "type": "string"
                  },
                  "socialId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Provide displayText .etc"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Social Media Id not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/social_links/{id}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "update Social Media Links of user",
        "description": "update Social Media Links of user",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update social links",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userLink": {
                    "type": "string"
                  },
                  "displayText": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "socialLinks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SocialLinks"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Social Media Id not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "delete Social Media Link from user",
        "description": "delete Social Media Link from user",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Social Media Id not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns a listing of search results",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "The search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "default": "relevance",
              "enum": [
                "hot",
                "top",
                "new",
                "relevance",
                "comments"
              ]
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "default": "post",
              "enum": [
                "sr",
                "post",
                "user",
                "comment"
              ]
            }
          },
          {
            "in": "query",
            "name": "time",
            "schema": {
              "type": "string",
              "default": "day",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year",
                "all"
              ]
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Post"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/comment"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "username": {
                            "type": "string",
                            "example": "user"
                          },
                          "karma": {
                            "type": "integer",
                            "example": 100
                          },
                          "bio": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "subreddit": {
                            "type": "string",
                            "example": "subreddit"
                          },
                          "members": {
                            "type": "integer",
                            "example": 100
                          },
                          "about": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/search/trending": {
      "get": {
        "tags": [
          "Search"
        ],
        "description": "get trending searches day by day",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trending"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/flairs": {
      "post": {
        "tags": [
          "Flair"
        ],
        "summary": "insert a new flair in the list of flair belonging to a subreddit",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "backgroundColor": {
                    "type": "string"
                  },
                  "textColor": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Flair"
        ],
        "summary": "get list of flairs belonging to a subreddit",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/flair"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/flairs/{flairId}": {
      "patch": {
        "tags": [
          "Flair"
        ],
        "description": "edit flair by id",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "flairId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "backgroundColor": {
                    "type": "string"
                  },
                  "textColor": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/flair"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Flair"
        ],
        "description": "delete flair by id",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "flairId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Flair"
        ],
        "summary": "get flair by id",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "flairId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/flair"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Submit a post to a subreddit",
        "description": "Create a post in a subreddit or user profile according to ownerModel.",
        "requestBody": {
          "description": "The post to be submitted",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCreate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid post type"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Fail operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Subreddit not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}": {
      "patch": {
        "tags": [
          "Posts"
        ],
        "summary": "Edit the body text of a post",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "post id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "example": "This is a post text"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "sucess"
                    },
                    "post": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Post cannot be edited"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "User must be author"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Remove a post",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "id of the post",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "sucess"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "User must be author"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "get post by id",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "post id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "sucess"
                    },
                    "post": {
                      "$ref": "#/components/schemas/HomePost"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/follow_post": {
      "post": {
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Follow or unfollow a post.",
        "description": "To follow, follow should be True. To unfollow, follow should be False. The user must have access to the subreddit to be able to follow a post within it.",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "post id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "follow": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/random": {
      "get": {
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Returns a random post",
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/hide": {
      "post": {
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Hide a post",
        "description": "This removes it from the user's default view of subreddit listings.",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "post id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "already hidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Method Not Allowed (blocked by author or deleted post)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/unhide": {
      "post": {
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Unhide a post",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "post id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "already unhidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Method Not Allowed (blocked by author or deleted post)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/save": {
      "post": {
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Save a post",
        "description": "This post is added to the list of the user saved posts",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "id of the post",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "already saved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Method Not Allowed (blocked by author or deleted post)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/unsave": {
      "post": {
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "unSave a  saved post",
        "description": "This post is removed from the list of the user saved posts",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "id of the post",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "already unsaved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Method Not Allowed (blocked by author or deleted post)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/moderate/{action}": {
      "patch": {
        "tags": [
          "Posts"
        ],
        "summary": "Changes the post state according to action.",
        "description": "Moderators can change the state of a post. A post is by default unmoderated, but it can be approved, removed, or spammed. Users can also mark a post as spammed, but it's different from moderatore spam, users spam doesn't immediately change the state of a post but once it exceeds a certain threshold, the post is spammed. The post state is overwriten by the most recent action.",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "id of the post",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "spam",
                "approve",
                "remove"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/{action}": {
      "patch": {
        "tags": [
          "Posts"
        ],
        "summary": "Perform an action on a post",
        "description": "These actions can only be performed by the post author or a moderator in the subreddit that owns the post.",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "id of the post",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "lock_comments",
                "unlock_comments",
                "mark_nsfw",
                "unmark_nsfw",
                "spoiler",
                "unspoiler"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/vote": {
      "description": "Post Resource",
      "post": {
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "description": "upvote or downvote posts",
        "summary": "Vote Post",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "post id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "1 for upvote  0 for novote -1 for downvote",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dir": {
                    "type": "integer",
                    "enum": [
                      1,
                      0,
                      -1
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "you already upvote or  downvote or novote post"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Method Not Allowed (blocked by author)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/suggested_sort": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "sort comments",
        "description": "Suggested sorts are useful to display comments in a certain preferred way for posts. It allows moderators to set comment sorting preferences at the post level. A sort of an empty string clears the default sort.",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "post id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/suggestedSort"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}": {
      "patch": {
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Edit the body text of a comment",
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "description": "comment id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "example": "This is a comment text"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "comment not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Remove a comment",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "id of the comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "sucess"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "User must be author"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments": {
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Create a comment",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "description": "Submit a new comment or reply to a message.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subbmitComment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "$ref": "#/components/schemas/comment"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing required parameter"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Fail operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Parent not found or invalid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments/suggested_tags": {
      "get": {
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "get a list of users suggested for mention",
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "description": "id of the post to get users who contributed in the post",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string"
                    },
                    "userName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}/save": {
      "post": {
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Save a comment",
        "description": "This comment is added to the list of the user saved comments",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "id of the comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}/unsave": {
      "post": {
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "unSave a  saved comment",
        "description": "This post/comment is removed from the list of the user saved comments",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "id of the comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}/marknsfw": {
      "patch": {
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "mark a comment as NSFW (by author or the subreddit moderator)",
        "description": "This comment is as NSFW (Not Safe For Work) a",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "id of the post",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}/unmarknsfw": {
      "patch": {
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Unmark a NSFW comment (by author or the subreddit moderator)",
        "description": "This comment is not a NSFW (Not Safe For Work) comment anymore",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "id of the comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}/lock_comments": {
      "patch": {
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Lock comments for this comment(by author or the subreddit moderator)",
        "description": "Nobody can write comments to this comment if the writter locked this comment.",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "id of the comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}/unlock_comments": {
      "patch": {
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Unlock comments for this post (by author or the subreddit moderator)",
        "description": "Comments can be written again to this comment if the writter unlock the locked comment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "id of the post",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}/vote": {
      "description": "Comment Resource",
      "post": {
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "description": "upvote or downvote comments",
        "summary": "Vote Comment",
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "description": "comment id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dir",
            "description": "1 for upvote  0 for novote -1 for downvote",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "comment not found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict Not Completed Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "you already upvote (downvote) comment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}/spam": {
      "patch": {
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Mark a comment in the subreddit as spam",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "id of the post",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{postId}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get the comment tree for a given post",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of comments to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "the maximum depth of the comment subtrees",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "top",
                "new",
                "best",
                "old"
              ]
            }
          },
          {
            "name": "commentId",
            "in": "query",
            "description": "If supplied, this comment will be the (highlighted) focal point of the returned view",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "The number of parents shown(an integer between 0 and 8)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/comment"
                      }
                    },
                    "moreComments": {
                      "$ref": "#/components/schemas/moreComments"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments/more_children/{postId}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Retrieve additional comments omitted from a base comment tree.",
        "description": "When a comment tree is rendered, the most relevant comments are selected for display first. Remaining comments are fetched with \"MoreComments\" links. This API call is used to retrieve the additional comments",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "The ID of the post whose comments are being fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "children",
            "in": "query",
            "description": "A comma separated list of comment IDs that need to be fetched",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "The maximum depth of the comment subtrees",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "top",
                "new",
                "best",
                "old"
              ]
            }
          },
          {
            "name": "limitChildren",
            "in": "query",
            "description": "If True, only return the children requested.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/comment"
                      }
                    },
                    "moreComments": {
                      "$ref": "#/components/schemas/moreComments"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/comments/{postId}": {
      "get": {
        "tags": [
          "Comments",
          "Subreddit"
        ],
        "summary": "Get the comment tree for a given post within a subreddit",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of comments to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "the maximum depth of the comment subtrees",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "top",
                "new",
                "best",
                "old"
              ]
            }
          },
          {
            "name": "commentId",
            "in": "query",
            "description": "If supplied, this comment will be the (highlighted) focal point of the returned view",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "The number of parents shown(an integer between 0 and 8)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/comment"
                      }
                    },
                    "moreComments": {
                      "$ref": "#/components/schemas/moreComments"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subreddits": {
      "post": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Create a subreddit",
        "requestBody": {
          "description": "Send the new permission",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fixedName": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Public",
                      "private",
                      "restricted"
                    ]
                  },
                  "nsfw": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "description": "created subreddit id",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}": {
      "get": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Get a subreddit with id",
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "description": "get a subreddit",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SUBREDDIT"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Eddit a subreddit info with id",
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "description": "subreddit id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Send the new info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fullSubredditExecludedModerators"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SUBREDDIT"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Delete a subreddit with id",
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "description": "get a subreddit",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/moderators/{moderatorName}": {
      "post": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Invite a moderator to the subreddit",
        "description": "A moderator of the subreddit invite a user to be a moderator using the id of the user permissions  (all => everything) (access => can edit users) (config => manage settings) (flair => manage flairs) (posts => manage posts)",
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "description": "id of the subreddit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moderatorName",
            "in": "path",
            "description": "id of the invited user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Send the new permission",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "all": {
                        "type": "boolean"
                      },
                      "access": {
                        "type": "boolean"
                      },
                      "config": {
                        "type": "boolean"
                      },
                      "flair": {
                        "type": "boolean"
                      },
                      "posts": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Remove a moderator from the subreddit",
        "description": "An old moderator of the subreddit remove a newer moderator from the subreddit using the id of the new one",
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "description": "id of the subreddit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moderatorName",
            "in": "path",
            "description": "id of the moderator to be removed",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Edit the permissions of a moderator in the subreddit (all => everything) (access => can edit users) (config => manage settings) (flair => manage flairs) (posts => manage posts)",
        "description": "An old moderator of the subreddit can edit the permissions of a newer moderator in the subreddit using the id of the new one  (all => everything) (access => can edit users) (config => manage settings) (flair => manage flairs) (posts => manage posts)",
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "description": "id of the subreddit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moderatorName",
            "in": "path",
            "description": "id of the moderator to be edited",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Send the new permission",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "all": {
                        "type": "boolean"
                      },
                      "access": {
                        "type": "boolean"
                      },
                      "config": {
                        "type": "boolean"
                      },
                      "flair": {
                        "type": "boolean"
                      },
                      "posts": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reducedModeratorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/Ban_settings/{action}/{userName}": {
      "post": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Ban/unBan a certain user in the subreddit",
        "description": "Ban/unBan a certain user on the subreddit if action is unBan dont provide a body",
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "description": "id of the subreddit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "path",
            "description": "id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "path",
            "description": "id of the user",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ban",
                "unban"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Send ban info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/banInfo"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/mute_settings/{action}/{userName}": {
      "post": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Mute/unMute a certain user in the subreddit",
        "description": "Mute/unMute a certain user on the subreddit if action is unMute dont provide a body",
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "description": "id of the subreddit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "path",
            "description": "id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "path",
            "description": "id of the user",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "mute",
                "unmute"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Send mute info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/muteInfo"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/posts/{postId}/approve": {
      "patch": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "A moderator approve a post in the subreddit",
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "description": "id of the subreddit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "id of the post to approve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/subscribe": {
      "post": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Subscribe to or unsubscribe from a subreddit",
        "description": "To subscribe, action should be sub. To unsubscribe, action should be unsub. The user should have access to the subreddit.",
        "parameters": [
          {
            "name": "subredditName",
            "in": "path",
            "description": "id of the subreddit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "The user doesn't have access to the subreddit"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "subreddit not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/about/{location}": {
      "get": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Return a listing of posts relevant to moderators.",
        "description": "This endpoint behavior depends on the location paremeter spam=> Things that have been marked as spam or otherwise removed. unmoderated=> Things that have yet to be approved/removed by a mod. edited=> Things that have been edited recently.",
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "subreddit id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "location",
            "description": "The category you want to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "spam",
                "unmoderated",
                "edited"
              ]
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "id not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/hot": {
      "get": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Return a listing of hot posts within the subreddit",
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "The subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HomePost"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "subreddit not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/new": {
      "get": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Return a listing of new posts within the subreddit",
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "The subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HomePost"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "subreddit not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/top": {
      "get": {
        "tags": [
          "Subreddit"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Return a listing of top posts within the subreddit",
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "The subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "time",
            "required": true,
            "schema": {
              "type": "string",
              "default": "today",
              "enum": [
                "now",
                "today",
                "week",
                "month",
                "year",
                "all"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HomePost"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "subreddit not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/mine/{where}": {
      "description": "Get Subreddits",
      "get": {
        "tags": [
          "Subreddit"
        ],
        "description": "Get subreddits belongs to me according to where parameter",
        "summary": "Get subreddits",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "where",
            "description": "type of relationship between user and subreddit",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "subscriber",
                "moderator"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "subreddits": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subreddit"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/moderator/{username}": {
      "get": {
        "tags": [
          "Subreddit"
        ],
        "summary": "Get Subreddits moderated by this user",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "username of user want to get subreddits moderated by him",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "subreddits": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subreddit"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/search": {
      "get": {
        "tags": [
          "Search",
          "Subreddit"
        ],
        "summary": "Search within a subreddit",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "The subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "The search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "default": "relevance",
              "enum": [
                "hot",
                "top",
                "new",
                "relevance",
                "comments"
              ]
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "default": "post",
              "enum": [
                "sr",
                "post",
                "user",
                "comment"
              ]
            }
          },
          {
            "in": "query",
            "name": "time",
            "schema": {
              "type": "string",
              "default": "day",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year",
                "all"
              ]
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Post"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/comment"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/banned": {
      "get": {
        "tags": [
          "Subreddit"
        ],
        "summary": "",
        "description": "Get list of baned users in this subreddit",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "The subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bannedUser"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/moderators": {
      "get": {
        "tags": [
          "Subreddit"
        ],
        "summary": "",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "description": "Get list of moderators in this subreddit",
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "The subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/reducedModeratorInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/favourites/get_subreddits": {
      "get": {
        "tags": [
          "Subreddit"
        ],
        "summary": "",
        "description": "Get list of subreddits marked as favourites",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/favourites"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/muted": {
      "get": {
        "tags": [
          "Subreddit"
        ],
        "summary": "",
        "description": "Get list of muted users in this subreddit",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "The subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mutedUser"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/{action}/invitation": {
      "post": {
        "tags": [
          "Subreddit"
        ],
        "description": "make the user moderator in this subreddit",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "The subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "action",
            "description": "invitation action",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accept",
                "reject"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/leave_moderator": {
      "post": {
        "tags": [
          "Subreddit"
        ],
        "summary": "leave moderator rule",
        "description": "make the user un moderator in this subreddit",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "The subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/favourite": {
      "post": {
        "tags": [
          "Subreddit"
        ],
        "summary": "mark or unmark subreddit as favourite/unfavourite",
        "description": "mark or unmark subreddit as favourite/unfavourite",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "The subreddit name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/leaderboard/{category}": {
      "get": {
        "tags": [
          "Subreddits"
        ],
        "description": "Get list of Communities belong to specific_category",
        "summary": "Get Communities in specific_category",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "maximum number of retreived subreddits",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 20
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": " page number, 1 for first group 2 for second group and so on",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort subreddits by (rank - membersCount)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "rank"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "subreddits": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subreddit"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "category not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/leaderboard/random": {
      "get": {
        "tags": [
          "Subreddits"
        ],
        "summary": "Get communities from a random category",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "number of subreddits",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "number of the page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "random_category": {
                      "type": "string"
                    },
                    "communities": {
                      "type": "array",
                      "description": "some (not all) info about the subreddit to be shown",
                      "items": {
                        "$ref": "#/components/schemas/reducedSubredditInfo"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/read_all_messages": {
      "post": {
        "tags": [
          "Private messages"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Mark all messages as read",
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/sent": {
      "get": {
        "tags": [
          "Private messages"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "Get the list of sent messages",
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sentMessage"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/post_replies": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Returns a listing of top level replies(aka. post replies) of the user posts",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "Comment": {
                      "$ref": "#/components/schemas/comment"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/messages/comments": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Returns a listing of comment replies(not including top level comments) of the user posts",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "Comment": {
                      "$ref": "#/components/schemas/comment"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/messages/mentions": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Returns a listing of user mentions",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "Mentions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/mention"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/messages/inbox": {
      "get": {
        "tags": [
          "Private messages"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "inbox messages(get all messages sent to user)",
        "description": "get all messages sent to user",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/unread": {
      "get": {
        "tags": [
          "Private messages"
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "summary": "inbox messages(get unreaded messages sent to user)",
        "description": "get unreaded messages sent to user",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "description": "Message Resource",
      "post": {
        "tags": [
          "Private messages"
        ],
        "description": "Send message to user (sender -> user or subreddit, receiver -> user)",
        "summary": "Create Message",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "Message Body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "senderType": {
                    "type": "string",
                    "enum": [
                      "user",
                      "subreddit"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "example": "name"
                  },
                  "to": {
                    "type": "string",
                    "example": "userName"
                  },
                  "subject": {
                    "type": "string",
                    "example": "subject"
                  },
                  "text": {
                    "type": "string",
                    "example": "text body"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{messageid}": {
      "description": "Message Resource",
      "delete": {
        "tags": [
          "Private messages"
        ],
        "description": "Delete message from user",
        "summary": "Delete Message",
        "parameters": [
          {
            "in": "path",
            "name": "messageid",
            "description": "id of message",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{messageId}/unread_message": {
      "patch": {
        "tags": [
          "Private messages"
        ],
        "summary": "mark message as unreaded",
        "description": "mark message as unreaded",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/unread_msg"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "return a listing of all notifications",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The limit of each page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Notification"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users/notifications/token": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "send the device firebase token",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "registration token"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success operation"
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "missing parameters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "unauthorised"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/notifications/mark_as_read": {
      "patch": {
        "tags": [
          "Notifications"
        ],
        "summary": "mark all notifications as read",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Success operation"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users/notifications/{notificationId}/mark_as_read": {
      "patch": {
        "tags": [
          "Notifications"
        ],
        "summary": "mark  notifications as read",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success operation"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users/notifications/{notificationId}/hide": {
      "patch": {
        "tags": [
          "Notifications"
        ],
        "summary": "hide notification",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success operation"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users/images": {
      "description": "deal with files (images)",
      "post": {
        "tags": [
          "Images"
        ],
        "description": "upload users file in its folder",
        "summary": "Upload user (image)",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profilePicture",
                      "profileBackground"
                    ]
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "tags": [
          "Images"
        ],
        "description": "delete user file in its folder",
        "summary": "delete user (image)",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "attribute or kind of image you want to save in file",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "profilePicture",
                "profileBackground"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "file not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subreddits/{subredditName}/images": {
      "description": "deal with files (images)",
      "post": {
        "tags": [
          "Images"
        ],
        "description": "upload subreddit file in its folder",
        "summary": "Upload subreddit (image)",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "subreddit Name (the authenticated user)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "example": "profile.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "you are not a moderator"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "tags": [
          "Images"
        ],
        "description": "delete subreddit file in its folder",
        "summary": "delete subreddit (image)",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subredditName",
            "description": "subredditName Name (the authenticated user)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "you are not a moderator"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "subreddit not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/images": {
      "description": "deal with files (images)",
      "post": {
        "tags": [
          "Images"
        ],
        "description": "upload post file in its folder",
        "summary": "Upload post (image)",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "id of post",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string",
                    "example": "post.png"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "you are not owner of this post"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Images"
        ],
        "description": "delete post file in its folder",
        "summary": "delete post (image)",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "id of post",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "you are not owner of this post"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "post not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Social": {
        "type": "object",
        "properties": {
          "baseLink": {
            "type": "string",
            "example": "https://facebook.com/"
          },
          "placeholderLink": {
            "type": "string",
            "example": "https://facebook.com"
          },
          "_id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "example": "facebook"
          },
          "icon": {
            "type": "string",
            "example": "icons/facebook.png"
          },
          "check": {
            "type": "string",
            "example": "https://facebook.com/"
          }
        }
      },
      "SocialLinks": {
        "type": "object",
        "properties": {
          "social": {
            "type": "object",
            "properties": {
              "baseLink": {
                "type": "string",
                "example": "https://facebook.com/"
              },
              "placeholderLink": {
                "type": "string",
                "example": "https://facebook.com"
              },
              "_id": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "example": "facebook"
              },
              "icon": {
                "type": "string",
                "example": "icons/facebook.png"
              },
              "check": {
                "type": "string",
                "example": "https://facebook.com/"
              }
            }
          },
          "_id": {
            "type": "string"
          },
          "displayText": {
            "type": "string"
          },
          "userLink": {
            "type": "string",
            "example": "https://facebook.com/ahmed"
          }
        }
      },
      "userPreferences": {
        "type": "object",
        "properties": {
          "canbeFollowed": {
            "type": "boolean",
            "example": true
          },
          "displayName": {
            "type": "string",
            "example": "firstname secondname"
          },
          "country": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "profileBackground": {
            "type": "string"
          },
          "nsfw": {
            "type": "boolean",
            "example": true
          },
          "adultContent": {
            "type": "boolean",
            "example": true
          },
          "autoplayMedia": {
            "type": "boolean",
            "example": true
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "description": {
            "type": "string",
            "example": " info"
          },
          "socialLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "social": {
                  "type": "object",
                  "properties": {
                    "baseLink": {
                      "type": "string",
                      "example": "https://facebook.com"
                    },
                    "placeholderLink": {
                      "type": "string",
                      "example": "https://facebook.com"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "example": "facebook"
                    },
                    "icon": {
                      "type": "string",
                      "example": "icons/facebook.png"
                    },
                    "check": {
                      "type": "string",
                      "example": "https://facebook.com/"
                    }
                  }
                },
                "_id": {
                  "type": "string"
                },
                "displayText": {
                  "type": "string"
                },
                "userLink": {
                  "type": "string",
                  "example": "https://facebook.com/ahmed"
                }
              }
            }
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "reducedModeratorInfo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "joiningDate": {
            "type": "string",
            "format": "date-time"
          },
          "profilePicture": {
            "type": "string"
          },
          "moderatorPermissions": {
            "type": "object",
            "properties": {
              "all": {
                "type": "boolean"
              },
              "access": {
                "type": "boolean"
              },
              "config": {
                "type": "boolean"
              },
              "flair": {
                "type": "boolean"
              },
              "posts": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "reducedSubredditInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          }
        }
      },
      "sentMessage": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          },
          "subject": {
            "type": "string"
          },
          "recieverId": {
            "type": "string"
          },
          "recieverName": {
            "type": "string"
          },
          "subredditId": {
            "type": "string"
          },
          "subredditName": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "rules": {
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "defaultName": {
            "type": "string"
          },
          "appliesTo": {
            "type": "string",
            "enum": [
              "Posts and comments",
              "Posts only",
              "Comments only"
            ]
          }
        }
      },
      "arraySubreddit": {
        "properties": {
          "fixedName": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          }
        }
      },
      "favourites": {
        "properties": {
          "status": {
            "type": "string",
            "default": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/arraySubreddit"
            }
          }
        }
      },
      "SUBREDDIT": {
        "properties": {
          "status": {
            "type": "string",
            "default": "success"
          },
          "data": {
            "$ref": "#/components/schemas/fullSubreddit"
          }
        }
      },
      "fullSubreddit": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "isJoined": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "primaryTopic": {
            "type": "string"
          },
          "backgroundImage": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rules"
            }
          },
          "fixedName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "topics": {
            "type": "array"
          },
          "language": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Public",
              "Private",
              "Restricted"
            ]
          },
          "nsfw": {
            "type": "boolean"
          },
          "postType": {
            "type": "string",
            "enum": [
              "Any",
              "Links only",
              "Text posts only"
            ]
          },
          "allowCrossposting": {
            "type": "boolean"
          },
          "allowArchivePosts": {
            "type": "boolean"
          },
          "allowSpoilerTag": {
            "type": "boolean"
          },
          "allowGif": {
            "type": "boolean"
          },
          "allowImageUploads": {
            "type": "boolean"
          },
          "allowMultipleImage": {
            "type": "boolean"
          },
          "moderators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/reducedModeratorInfo"
            }
          }
        }
      },
      "fullSubredditExecludedModerators": {
        "properties": {
          "isJoined": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "primaryTopic": {
            "type": "string"
          },
          "backgroundImage": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "rules": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "defaultName": {
                "type": "string"
              },
              "appliesTo": {
                "type": "string",
                "enum": [
                  "Posts and comments",
                  "Posts only",
                  "Comments only"
                ]
              }
            }
          },
          "name": {
            "type": "string"
          },
          "fixedName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "topics": {
            "type": "array"
          },
          "language": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Public",
              "Private",
              "Restricted"
            ]
          },
          "nsfw": {
            "type": "boolean"
          },
          "postType": {
            "type": "string",
            "enum": [
              "Any",
              "Links only",
              "Text posts only"
            ]
          },
          "allowCrossposting": {
            "type": "boolean"
          },
          "allowArchivePosts": {
            "type": "boolean"
          },
          "allowSpoilerTag": {
            "type": "boolean"
          },
          "allowGif": {
            "type": "boolean"
          },
          "allowImageUploads": {
            "type": "boolean"
          },
          "allowMultipleImage": {
            "type": "boolean"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "int64",
            "example": 10
          },
          "userName": {
            "type": "string",
            "example": "uniqueuser"
          },
          "email": {
            "type": "string",
            "example": "user@email.com"
          },
          "profilePicture": {
            "type": "string",
            "example": "src url"
          },
          "profileBackground": {
            "type": "string"
          },
          "adultContent": {
            "type": "boolean",
            "example": true
          },
          "autoplayMedia": {
            "type": "boolean",
            "example": true
          },
          "canbeFollowed": {
            "type": "boolean",
            "example": true
          },
          "lastUpdatedPassword": {
            "type": "string",
            "example": "2022-10-22-06-12",
            "format": "date-time"
          },
          "followersCount": {
            "type": "integer",
            "example": 0
          },
          "friendsCount": {
            "type": "integer",
            "example": 0
          },
          "accountActivated": {
            "type": "boolean",
            "example": true
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "displayName": {
            "type": "string",
            "example": "firstname secondname"
          },
          "postKarma": {
            "type": "integer",
            "example": 1
          },
          "commentKarma": {
            "type": "integer",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2022-10-22-06-12",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "example": " info"
          },
          "socialLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "social": {
                  "type": "object",
                  "properties": {
                    "baseLink": {
                      "type": "string",
                      "example": "https://facebook.com/"
                    },
                    "placeholderLink": {
                      "type": "string",
                      "example": "https://facebook.com"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "example": "facebook"
                    },
                    "icon": {
                      "type": "string",
                      "example": "icons/facebook.png"
                    },
                    "check": {
                      "type": "string",
                      "example": "https://facebook.com/"
                    }
                  }
                },
                "_id": {
                  "type": "string"
                },
                "displayText": {
                  "type": "string"
                },
                "userLink": {
                  "type": "string",
                  "example": "https://facebook.com/ahmed"
                }
              }
            }
          }
        }
      },
      "Friend": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "int64",
            "example": 10
          },
          "userName": {
            "type": "string",
            "example": "uniqueuser"
          },
          "profilePicture": {
            "type": "string",
            "example": "src url"
          },
          "profileBackground": {
            "type": "string"
          },
          "adultContent": {
            "type": "boolean",
            "example": true
          },
          "autoplayMedia": {
            "type": "boolean",
            "example": true
          },
          "canbeFollowed": {
            "type": "boolean",
            "example": true
          },
          "followersCount": {
            "type": "integer",
            "example": 0
          },
          "friendsCount": {
            "type": "integer",
            "example": 0
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "displayName": {
            "type": "string",
            "example": "firstname secondname"
          },
          "postKarma": {
            "type": "integer",
            "example": 1
          },
          "commentKarma": {
            "type": "integer",
            "example": 1
          },
          "isFollowed": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "example": "2022-10-22-06-12",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "example": " info"
          },
          "socialLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "social": {
                  "type": "object",
                  "properties": {
                    "baseLink": {
                      "type": "string",
                      "example": "https://facebook.com/"
                    },
                    "placeholderLink": {
                      "type": "string",
                      "example": "https://facebook.com"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "example": "facebook"
                    },
                    "icon": {
                      "type": "string",
                      "example": "icons/facebook.png"
                    },
                    "check": {
                      "type": "string",
                      "example": "https://facebook.com/"
                    }
                  }
                },
                "_id": {
                  "type": "string"
                },
                "displayText": {
                  "type": "string"
                },
                "userLink": {
                  "type": "string",
                  "example": "https://facebook.com/ahmed"
                }
              }
            }
          }
        }
      },
      "Subreddit": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string"
          },
          "_id": {
            "type": "string",
            "format": "int64",
            "example": 10
          },
          "fixedName": {
            "type": "string",
            "example": "uniquesubreddit"
          },
          "membersCount": {
            "type": "integer",
            "example": 10000
          },
          "description": {
            "type": "string",
            "example": "welcome to subreddit"
          }
        }
      },
      "PostCreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "link",
              "self",
              "image",
              "video"
            ]
          },
          "text": {
            "type": "string",
            "description": "the text of the post in case the kind is self"
          },
          "url": {
            "type": "string",
            "description": "A valid URL in case the kind is link"
          },
          "owner": {
            "type": "string",
            "description": "The name of the subreddit where the post was created. If the post was created in a user profile the userName is passesd instead"
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "User",
              "Subreddit"
            ],
            "description": "Determines wether the post belongs to a subreddit or a user"
          },
          "nsfw": {
            "type": "boolean"
          },
          "spoiler": {
            "type": "boolean"
          },
          "sendReplies": {
            "type": "boolean",
            "description": "indicates whether the post accepts replies in private messages or not"
          },
          "flairId": {
            "type": "string"
          },
          "flairText": {
            "type": "string",
            "description": "Should be given if the user edited the flair text"
          },
          "suggestedSort": {
            "description": "specified only in scheduled posts",
            "type": "string",
            "enum": [
              "top",
              "new",
              "best",
              "old"
            ]
          },
          "scheduled": {
            "type": "boolean",
            "description": "Should be true if the post is scheduled and createdAt should be the scheduled time"
          },
          "sharedFrom": {
            "type": "string",
            "description": "The ID of the original post"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "author": {
            "type": "string",
            "description": "The name of the user who created the post"
          },
          "owner": {
            "type": "string",
            "description": "The name of the subreddit where the post was created. If the post was created in a user profile the userName is passesd instead"
          },
          "title": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "link",
              "self",
              "image",
              "video"
            ]
          },
          "text": {
            "type": "string",
            "description": "the text of the post in case the kind is self"
          },
          "url": {
            "type": "string",
            "description": "A valid URL in case the kind is link"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The images path(the kind must be image)"
          },
          "video": {
            "type": "string",
            "description": "The video path(the kind must be video)"
          },
          "votes": {
            "type": "integer",
            "description": "total number of votes"
          },
          "shareCount": {
            "type": "integer",
            "description": "total number of shares"
          },
          "views": {
            "type": "integer",
            "description": "view count"
          },
          "commentCount": {
            "type": "integer",
            "description": "total number of comments"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "suggestedSort": {
            "type": "string",
            "enum": [
              "top",
              "new",
              "best",
              "old"
            ]
          },
          "nsfw": {
            "type": "boolean"
          },
          "spoiler": {
            "type": "boolean"
          },
          "sendReplies": {
            "type": "boolean",
            "description": "indicates whether the post accepts replies in private messages or not"
          },
          "locked": {
            "type": "boolean",
            "description": "whether the post can receive comments or not"
          },
          "modState": {
            "type": "string",
            "enum": [
              "approved",
              "removed",
              "spammed"
            ]
          },
          "flairId": {
            "type": "string"
          },
          "flairText": {
            "type": "string"
          }
        }
      },
      "HomePost": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "author": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "description": "The  user who created the post"
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "Subreddit",
              "User"
            ]
          },
          "owner": {
            "type": "object",
            "description": "The name of the subreddit where the post was created. If the post was created in a user profile the userName is passesd instead",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "icon": {
                "type": "string"
              }
            }
          },
          "replies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "array of comments ids"
          },
          "flairId": {
            "$ref": "#/components/schemas/flair"
          },
          "flairText": {
            "type": "string"
          },
          "sharedFrom": {
            "type": "string",
            "description": "shared post id"
          },
          "title": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "link",
              "self",
              "image",
              "video"
            ]
          },
          "text": {
            "type": "string",
            "description": "the text of the post in case the kind is self"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "video": {
            "type": "string",
            "description": "The video path(the kind must be video)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "locked": {
            "type": "boolean",
            "description": "whether the post can receive comments or not"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "whether the post is deleted or not"
          },
          "sendReplies": {
            "type": "boolean",
            "description": "indicates whether the post accepts replies in private messages or not"
          },
          "nsfw": {
            "type": "boolean"
          },
          "spoiler": {
            "type": "boolean"
          },
          "votes": {
            "type": "integer",
            "description": "total number of votes"
          },
          "views": {
            "type": "integer",
            "description": "view count"
          },
          "commentCount": {
            "type": "integer",
            "description": "total number of comments"
          },
          "shareCount": {
            "type": "integer",
            "description": "total number of shares"
          },
          "suggestedSort": {
            "type": "string",
            "enum": [
              "top",
              "new",
              "best",
              "old"
            ]
          },
          "scheduled": {
            "type": "boolean"
          },
          "sortOnHot": {
            "type": "integer",
            "description": "calculated value to sort on it"
          },
          "sortOnBest": {
            "type": "integer",
            "description": "calculated value to sort on it"
          },
          "isSpam": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "description": "A valid URL in case the kind is link"
          },
          "isSaved": {
            "type": "boolean"
          },
          "postVoteStatus": {
            "type": "integer"
          }
        }
      },
      "userPost": {
        "type": "object",
        "properties": {
          "author": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "owner": {
            "type": "object",
            "description": "The name of the subreddit where the post was created. If the post was created in a user profile the userName is passesd instead",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "icon": {
                "type": "string"
              }
            }
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "Subreddit",
              "User"
            ]
          },
          "title": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "link",
              "self",
              "image",
              "video"
            ]
          },
          "text": {
            "type": "string",
            "description": "the text of the post in case the kind is self"
          },
          "url": {
            "type": "string",
            "description": "A valid URL in case the kind is link"
          },
          "sr": {
            "type": "string",
            "description": "subreddit name"
          },
          "votes": {
            "type": "integer",
            "description": "total number of votes"
          },
          "commentCount": {
            "type": "integer",
            "description": "total number of comments"
          },
          "views": {
            "type": "integer",
            "description": "total number of views"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "suggestedSort": {
            "type": "string",
            "enum": [
              "top",
              "new",
              "best",
              "old"
            ]
          },
          "nsfw": {
            "type": "boolean"
          },
          "spoiler": {
            "type": "boolean"
          },
          "sendReplies": {
            "type": "boolean",
            "description": "indicates whether the post accepts replies in private messages or not"
          },
          "locked": {
            "type": "boolean",
            "description": "whether the post can receive comments or not"
          },
          "flairId": {
            "$ref": "#/components/schemas/flair"
          },
          "flairText": {
            "type": "string"
          },
          "postVoteStatus": {
            "type": "string",
            "enum": [
              "1",
              "0",
              "-1"
            ]
          },
          "isSaved": {
            "type": "boolean",
            "example": true
          },
          "isHidden": {
            "type": "boolean",
            "example": true
          },
          "isSpam": {
            "type": "boolean",
            "example": true
          },
          "sharedFrom": {
            "type": "string",
            "description": "post id if shared ,undefined if not shared"
          },
          "shareCount": {
            "type": "integer",
            "description": "Total numbers of share"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "image url"
            }
          },
          "video": {
            "type": "string"
          }
        }
      },
      "userComment": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "id of the comment"
          },
          "parent": {
            "type": "string",
            "description": "id of post or comment who is parent of comment"
          },
          "parentType": {
            "type": "string",
            "description": "type of parent who  omments belongs to"
          },
          "author": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "owner": {
            "type": "object",
            "description": "The name of the subreddit where the comment was created.",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "icon": {
                "type": "string"
              }
            }
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "User",
              "Subreddit"
            ],
            "description": "type of owner who owns post"
          },
          "post": {
            "type": "string",
            "description": "post id"
          },
          "title": {
            "type": "string",
            "description": "post title"
          },
          "text": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "votes": {
            "type": "integer",
            "description": "total number of votes"
          },
          "commentVoteStatus": {
            "type": "string",
            "enum": [
              "1",
              "0",
              "-1"
            ]
          },
          "isDeleted": {
            "type": "boolean",
            "example": false
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "userName of mentioned users"
            }
          },
          "isSaved": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "comment": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "post": {
            "type": "string"
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/comment"
            }
          },
          "moreReplies": {
            "$ref": "#/components/schemas/moreComments"
          },
          "parent": {
            "type": "string"
          },
          "parentType": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "votes": {
            "type": "integer",
            "description": "total number of votes"
          },
          "repliesCount": {
            "type": "integer"
          }
        }
      },
      "moreComments": {
        "type": "object",
        "description": "This objects encapsulates the number and IDs of additional replies to be used by the more children endpoint",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of replies"
          },
          "children": {
            "type": "array",
            "description": "An array of comment IDs to be fetched later",
            "items": {
              "type": "string"
            }
          },
          "parentID": {
            "type": "string",
            "description": "The ID of the parent comment or post(in case of post replies)"
          },
          "depth": {
            "type": "integer",
            "description": "The depth of the children to be fetched(starts at 0)"
          }
        }
      },
      "mention": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "The user who got mentioned"
          },
          "from": {
            "type": "string",
            "description": "The user who wrote the mention"
          },
          "subreddit": {
            "type": "string"
          },
          "postId": {
            "type": "string"
          },
          "commentCount": {
            "type": "integer",
            "example": 7
          },
          "Comment": {
            "$ref": "#/components/schemas/comment"
          }
        }
      },
      "commentsandoosts": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "posts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "author": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "description": "The  user who created the post"
                },
                "ownerType": {
                  "type": "string",
                  "enum": [
                    "Subreddit",
                    "User"
                  ]
                },
                "owner": {
                  "type": "object",
                  "description": "The name of the subreddit where the post was created. If the post was created in a user profile the userName is passesd instead",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string"
                    }
                  }
                },
                "title": {
                  "type": "string"
                },
                "text": {
                  "type": "string",
                  "description": "the text of the post in case the kind is self"
                },
                "nsfw": {
                  "type": "boolean"
                },
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "id of the comment"
                      },
                      "parent": {
                        "type": "string",
                        "description": "id of post or comment who is parent of comment"
                      },
                      "parentType": {
                        "type": "string",
                        "description": "type of parent who  omments belongs to"
                      },
                      "author": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "title": {
                        "type": "string",
                        "description": "post title"
                      },
                      "text": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28.000Z"
                      },
                      "votes": {
                        "type": "integer",
                        "description": "total number of votes"
                      },
                      "commentVoteStatus": {
                        "type": "string",
                        "enum": [
                          "1",
                          "0",
                          "-1"
                        ]
                      },
                      "isDeleted": {
                        "type": "boolean",
                        "example": false
                      },
                      "mentions": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "userName of mentioned users"
                        }
                      },
                      "isSaved": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "overview": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userComment"
            }
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userPost"
            }
          }
        }
      },
      "upvotes": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userPost"
            }
          }
        }
      },
      "saved": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userPost"
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userComment"
            }
          }
        }
      },
      "downvotes": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userPost"
            }
          }
        }
      },
      "subbmitComment": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "string"
          },
          "parentType": {
            "type": "string",
            "enum": [
              "Post",
              "Comment"
            ]
          },
          "text": {
            "type": "string"
          }
        }
      },
      "suggestedSort": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "string",
            "enum": [
              "best",
              "top",
              "hot",
              "new"
            ],
            "default": "top"
          }
        }
      },
      "suggestedSortResult": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/comment"
            }
          }
        }
      },
      "flair": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "textColor": {
            "type": "string"
          }
        }
      },
      "messages": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            }
          }
        }
      },
      "message": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string"
          },
          "subreddit": {
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "postReply",
              "userMessage",
              "userMention",
              "subredditBan",
              "subredditMute",
              "subredditModeratorInvite",
              "subredditModeratorAccept",
              "subredditModeratorRemove",
              "subredditApprove"
            ]
          }
        },
        "xml": {
          "name": "tag"
        }
      },
      "unread_msg": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string"
          }
        },
        "xml": {
          "name": "tag"
        }
      },
      "subreddit": {
        "type": "object",
        "properties": {
          "userNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "trending": {
        "type": "object",
        "properties": {
          "searchQuery": {
            "type": "string"
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Post"
            }
          }
        }
      },
      "muteInfo": {
        "type": "object",
        "properties": {
          "muteMessage": {
            "type": "string"
          }
        }
      },
      "mutedUser": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "joiningDate": {
            "type": "string",
            "format": "date-time"
          },
          "muteInfo": {
            "$ref": "#/components/schemas/muteInfo"
          }
        }
      },
      "banInfo": {
        "type": "object",
        "required": [
          "ban reason"
        ],
        "properties": {
          "punish_type": {
            "type": "string",
            "enum": [
              "No Spoiler",
              "Spam",
              "Personal And confidential Information",
              "Threatening, harassing or inciting violence"
            ]
          },
          "Note": {
            "type": "string",
            "description": "short note about the ban"
          },
          "punishReason": {
            "type": "string",
            "description": "more info about the ban to be sent to the user"
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "description": "for how long he will be banned (either permanently or for a certain number of days)"
          }
        }
      },
      "bannedUser": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "banDate": {
            "type": "string",
            "format": "date-time"
          },
          "baninfo": {
            "$ref": "#/components/schemas/banInfo"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "postReply",
              "commentReply",
              "firstPostUpvote",
              "firstCommentUpVote",
              "userMention",
              "follow"
            ]
          },
          "followedUser": {
            "$ref": "#/components/schemas/User"
          },
          "followerUser": {
            "$ref": "#/components/schemas/User"
          },
          "followedSubreddit": {
            "$ref": "#/components/schemas/fullSubreddit"
          },
          "post": {
            "$ref": "#/components/schemas/Post"
          },
          "comment": {
            "$ref": "#/components/schemas/userComment"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "seen": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "jwt"
      },
      "oAuthSample": {
        "type": "oauth2",
        "description": "Facebook or google authentication",
        "flows": {
          "implicit": {
            "authorizationUrl": "/oauth/authorize",
            "scopes": {
              "access_token": "token"
            }
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "errorMessage": {
                  "type": "string",
                  "example": "unauthorized"
                }
              }
            }
          }
        }
      }
    }
  }
}